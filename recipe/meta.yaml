# adapted from recipe in https://github.com/pytorch/builder
# TODO: examine if it is possible to link DSO dynamically
package:
  name: magma
  # This version builds and tests, but it hasn't been released, because it wasn't needed in the end. It was going to be
  # used for PyTorch 2.3.0, but after doing the work we discovered that PyTorch 2.3.0 doesn't support CUDA 12.4 yet.
  # Magma might need to be updated to the next version to support PyTorch 2.4+ anyway, so we aren't releasing this.
  version: 2.7.1

source:
   url: http://icl.cs.utk.edu/projectsfiles/magma/downloads/magma-2.7.1.tar.gz
   sha256: d9c8711c047a38cae16efde74bee2eb3333217fd2711e1e9b8606cbbb4ae1a50
   patches:
    - thread_queue.patch

build:
  number: 0
  # we currently only need this for pytorch GPU, which currently only uses this for linux-64.
  # Windows is theoretically possible but we haven't got the CMake CUDA support to work there yet.
  skip: True  # [not (linux and x86_64)]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}                                 # [gpu_variant == "cuda-12"]
    - cmake
    - ninja       # [win]
    - m2-patch    # [win]
    - patch       # [not win]
  host:
    - cudatoolkit {{ cudatoolkit }}*                         # [gpu_variant == "cuda-11"]
    - cuda-cudart-dev                                        # [gpu_variant == "cuda-12"]
    - cuda-profiler-api                                      # [gpu_variant == "cuda-12"]
    - libcublas-dev                                          # [gpu_variant == "cuda-12"]
    - libcusparse-dev                                        # [gpu_variant == "cuda-12"]
    - intel-openmp {{ mkl }}
    - mkl {{ mkl }}
    - mkl-include
  run:
    - {{ pin_compatible('cudatoolkit', max_pin='x.x') }}     # [gpu_variant == "cuda-11"]
    - intel-openmp {{ mkl }}
    - mkl {{ mkl }}

test:
  commands:
    - test -f $PREFIX/include/magma.h                             # [unix]
    - test -f $PREFIX/lib/libmagma${SHLIB_EXT}                    # [unix]
    - test -f $PREFIX/lib/libmagma_sparse${SHLIB_EXT}             # [unix]
    - if not exist %LIBRARY_PREFIX%\include\magma.h exit 1        # [win]
    - if not exist %LIBRARY_PREFIX%\lib\magma.lib exit 1          # [win]
    - if not exist %LIBRARY_PREFIX%\bin\magma.dll exit 1          # [win]
    - if not exist %LIBRARY_PREFIX%\lib\magma_sparse.lib exit 1   # [win]
    - if not exist %LIBRARY_PREFIX%\bin\magma_sparse.dll exit 1   # [win]

about:
  home: https://icl.utk.edu/magma/index.html
  license: BSD 3-Clause
  license_family: BSD
  license_file: COPYRIGHT
  summary: Matrix Algebra on GPU and Multicore Architectures
  doc_url: https://icl.utk.edu/projectsfiles/magma/doxygen/
  dev_url: https://bitbucket.org/icl/magma/
